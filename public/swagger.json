{
  "openapi": "3.0.0",
  "info": {
    "title": "API Sorteio Ativo",
    "version": "1.0.0",
    "description": "Documentação da API do Sorteio Ativo"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/admin/orders/{id}/remind": {
      "post": {
        "summary": "Envia um e-mail de lembrete para um pedido pendente (Admin)",
        "description": "(Admin) Busca os detalhes de um pedido pendente e envia um e-mail de lembrete para o cliente.",
        "tags": [
          "Admin - Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "E-mail de lembrete enviado com sucesso.",
            "content": {
              "application/json": {
                "example": {
                  "message": "E-mail de lembrete enviado para o cliente com sucesso."
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado.",
            "content": {
              "application/json": {
                "example": {
                  "error": "Pedido com ID 123 não encontrado."
                }
              }
            }
          },
          "409": {
            "description": "Conflito (ex: o pedido não está pendente).",
            "content": {
              "application/json": {
                "example": {
                  "error": "O pedido já foi concluído e não pode receber lembrete."
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/orders/{id}": {
      "get": {
        "summary": "Obtém os detalhes de um pedido específico (Admin)",
        "description": "(Admin) Retorna os detalhes completos de um pedido, incluindo números associados.",
        "tags": [
          "Admin - Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do pedido."
          },
          "404": {
            "description": "Pedido não encontrado."
          }
        }
      },
      "put": {
        "summary": "Atualiza o status de um pedido (Admin)",
        "description": "(Admin) Permite alterar o status de um pedido. Se um pedido pendente for alterado para 'completed', os números reservados serão marcados como 'sold'. Se alterado para 'failed' ou 'cancelled', serão libertados.",
        "tags": [
          "Admin - Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "completed",
                      "failed",
                      "cancelled"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido atualizado com sucesso."
          },
          "400": {
            "description": "Status inválido."
          },
          "409": {
            "description": "Conflito, o pedido já foi processado ou está num estado que não permite alteração."
          }
        }
      }
    },
    "/api/admin/orders": {
      "get": {
        "summary": "Lista todos os pedidos do sistema (Admin)",
        "description": "(Admin) Retorna uma lista de todos os pedidos, juntando informações do utilizador e do produto.",
        "tags": [
          "Admin - Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de todos os pedidos."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      },
      "post": {
        "summary": "Marca uma ordem como completa (Admin)",
        "description": "(Admin) Altera o status de uma ordem para 'completed' e o status dos seus números de 'reserved' para 'sold'. Útil para confirmar pagamentos manuais.",
        "tags": [
          "Admin - Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderId"
                ],
                "properties": {
                  "orderId": {
                    "type": "integer",
                    "description": "O ID da ordem a ser marcada como completa."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ordem atualizada com sucesso."
          },
          "400": {
            "description": "ID da ordem não fornecido."
          },
          "404": {
            "description": "Ordem não encontrada."
          },
          "409": {
            "description": "Conflito, a ordem não pode ser marcada como completa (ex: não está pendente)."
          }
        }
      }
    },
    "/api/admin/products/{id}/draw": {
      "post": {
        "summary": "Realiza o sorteio de um produto",
        "description": "(Admin) Sorteia um número vencedor entre todos os números vendidos de um produto. Só funciona se o produto estiver 'ativo' e se todos os 101 números tiverem sido vendidos.",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "O ID do produto a ser sorteado.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sorteio realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sorteio realizado com sucesso!"
                    },
                    "winningNumber": {
                      "type": "integer"
                    },
                    "winningUserId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "409": {
            "description": "Conflito. O sorteio não pode ser realizado (produto não está ativo ou nem todos os números foram vendidos).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/admin/products/{id}": {
      "put": {
        "summary": "Atualiza um produto existente (Admin)",
        "description": "(Admin) Altera os detalhes de um produto específico.\n",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "O ID numérico do produto a ser atualizado.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nova Rifa Incrível"
                  },
                  "description": {
                    "type": "string",
                    "example": "Uma descrição atualizada para a rifa."
                  },
                  "price_per_number": {
                    "type": "number",
                    "format": "float",
                    "example": 15.75
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://example.com/nova_imagem.jpg"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "upcoming",
                      "drawn",
                      "cancelled"
                    ],
                    "example": "active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Produto atualizado com sucesso"
                    },
                    "product": {
                      "type": "object",
                      "description": "Retorna o produto atualizado"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/admin/products": {
      "post": {
        "summary": "Cria um novo produto (sorteio)",
        "description": "(Admin) Adiciona um novo produto e inicializa seus números de 0 a 100 como disponíveis.\n",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "price_per_number"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Rifa de um PlayStation 5"
                  },
                  "description": {
                    "type": "string",
                    "example": "Concorra a um PS5 novinho em folha!"
                  },
                  "price_per_number": {
                    "type": "number",
                    "format": "float",
                    "example": 25.5
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://example.com/ps5.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto e números criados com sucesso."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      },
      "get": {
        "summary": "Lista todos os produtos (Admin)",
        "description": "(Admin) Retorna uma lista de todos os produtos cadastrados, independentemente do status.\n",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de todos os produtos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "price_per_number": {
                            "type": "number",
                            "format": "float"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "upcoming",
                              "drawn",
                              "cancelled"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "winning_number": {
                            "type": "integer",
                            "nullable": true
                          },
                          "winner_user_id": {
                            "type": "integer",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Lista todos os usuários cadastrados (Admin)",
        "description": "(Admin) Retorna uma lista de todos os usuários do sistema, incluindo seus IDs, nomes, emails e funções (roles).\n",
        "tags": [
          "Admin - Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de usuários.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "admin"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      },
      "post": {
        "summary": "Cria um novo usuário (Admin)",
        "description": "(Admin) Permite que um administrador crie uma nova conta de usuário, definindo nome, email, senha e função.\n",
        "tags": [
          "Admin - Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "role"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Novo Usuário"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "novousuario@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "senha123",
                    "minLength": 6
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin"
                    ],
                    "example": "user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuário criado com sucesso!"
                    },
                    "userId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos (ex: email já existe, senha curta, role inválida).\n"
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado, não é um administrador."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "summary": "Busca as notificações do usuário logado",
        "description": "Retorna uma lista de todas as notificações para o usuário autenticado, ordenadas das mais recentes para as mais antigas.",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso. Retorna as notificações.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          },
                          "is_read": {
                            "type": "boolean"
                          },
                          "link": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      },
      "put": {
        "summary": "Marca notificações como lidas",
        "description": "Permite marcar uma ou todas as notificações do usuário como lidas.",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notificationIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Um array de IDs de notificações para marcar como lidas."
                  },
                  "mark_all_as_read": {
                    "type": "boolean",
                    "description": "Se verdadeiro, marca todas as notificações não lidas como lidas."
                  }
                },
                "example": {
                  "notificationIds": [
                    1,
                    2,
                    3
                  ],
                  "mark_all_as_read": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notificações atualizadas com sucesso."
          },
          "400": {
            "description": "Requisição inválida."
          },
          "401": {
            "description": "Não autenticado."
          }
        }
      }
    },
    "/api/orders/my-orders": {
      "get": {
        "summary": "Lista os pedidos e números comprados pelo usuário autenticado",
        "description": "Retorna uma lista detalhada dos pedidos feitos pelo usuário, incluindo informações do produto, status do pedido e os números específicos comprados.",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Uma lista de pedidos do usuário.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "order_id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "order_date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "total_amount": {
                            "type": "number",
                            "format": "float"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status do pedido (pending, completed, failed)"
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status do sorteio (do produto)"
                              },
                              "winning_number": {
                                "type": "integer"
                              }
                            }
                          },
                          "purchasedNumbers": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Finaliza uma compra e marca números como vendidos",
        "description": "Esta API é chamada após um pagamento bem-sucedido (ex: retorno do Mercado Pago). Ela verifica a disponibilidade final dos números (considerando se já estão reservados/vendidos pelo mesmo usuário ou por outros). Se tudo estiver OK, marca os números como 'sold' e atualiza o pedido para 'completed' (se ainda não estiver).\n",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId",
                  "selectedNumbers",
                  "internalOrderId"
                ],
                "properties": {
                  "productId": {
                    "type": "integer",
                    "description": "ID do produto."
                  },
                  "selectedNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Lista dos números selecionados."
                  },
                  "internalOrderId": {
                    "type": "integer",
                    "description": "O ID do pedido que foi previamente criado com status 'pending'."
                  },
                  "paymentDetails": {
                    "type": "string",
                    "description": "Detalhes do pagamento (ex: ID do pagamento do Mercado Pago).\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pedido finalizado com sucesso, números marcados como vendidos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "orderId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida (dados faltando, etc.)."
          },
          "401": {
            "description": "Não autenticado."
          },
          "404": {
            "description": "Produto ou Pedido não encontrado."
          },
          "409": {
            "description": "Conflito (um ou mais números selecionados não estão disponíveis para este usuário).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "unavailable_numbers": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Retorna os detalhes de um produto específico e seus números",
        "description": "Busca os detalhes de um produto pelo seu ID, juntamente com a lista completa de seus números e seus respectivos status (disponível, vendido, etc.).\n",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "O ID numérico do produto.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do produto e a lista de números.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price_per_number": {
                          "type": "number"
                        },
                        "numbers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "number_value": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "user_id": {
                                "type": "integer",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "Lista todos os produtos ativos",
        "description": "Retorna uma lista de todos os produtos que estão atualmente ativos e disponíveis para compra.\n",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos ativos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "price_per_number": {
                            "type": "number",
                            "format": "float"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "upcoming",
                              "drawn",
                              "cancelled"
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "winning_number": {
                            "type": "integer",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/users/change-password": {
      "post": {
        "summary": "Altera a senha do utilizador autenticado",
        "description": "Permite que um utilizador logado altere a sua própria senha fornecendo a senha atual e a nova.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword",
                  "confirmPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "A senha atual do utilizador para verificação."
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6,
                    "description": "A nova senha desejada."
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Confirmação da nova senha."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha alterada com sucesso."
          },
          "400": {
            "description": "Dados inválidos (ex: senhas não coincidem)."
          },
          "401": {
            "description": "Não autenticado."
          },
          "403": {
            "description": "Acesso negado (ex: senha atual incorreta)."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Autentica um usuário",
        "description": "Realiza o login do usuário com email e senha e retorna um JSON Web Token (JWT) em caso de sucesso.\n",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "senhaForte123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login realizado com sucesso!"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "João da Silva"
                        },
                        "email": {
                          "type": "string",
                          "example": "joao.silva@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email ou senha não fornecidos."
          },
          "401": {
            "description": "Não autorizado, credenciais inválidas."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/users/register": {
      "post": {
        "summary": "Registra um novo usuário",
        "description": "Cria uma nova conta de usuário com nome, email e senha. O email deve ser único.\n",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "João da Silva"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "senhaForte123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registro realizado com sucesso!"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "João da Silva"
                        },
                        "email": {
                          "type": "string",
                          "example": "joao.silva@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou email já cadastrado."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/users/reset-password": {
      "post": {
        "summary": "Redefine a senha de um utilizador",
        "description": "Utiliza um token de redefinição para definir uma nova senha para a conta do utilizador.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "O token de redefinição recebido por e-mail."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6,
                    "description": "A nova senha do utilizador."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso."
          },
          "400": {
            "description": "Dados inválidos (ex: token inválido ou expirado, senha curta)."
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    },
    "/api/winners": {
      "get": {
        "summary": "Lista os ganhadores dos sorteios finalizados",
        "description": "Retorna uma lista de produtos com status 'drawn', incluindo o nome do produto, o número vencedor e o nome do ganhador.",
        "tags": [
          "Public"
        ],
        "responses": {
          "200": {
            "description": "Uma lista de sorteios finalizados e seus ganhadores.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "winners": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "integer"
                          },
                          "product_name": {
                            "type": "string"
                          },
                          "product_image_url": {
                            "type": "string"
                          },
                          "winning_number": {
                            "type": "integer"
                          },
                          "winner_name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "winners": [
                    {
                      "product_id": 101,
                      "product_name": "iPhone 14 Pro Max",
                      "product_image_url": "https://example.com/images/iphone14.jpg",
                      "winning_number": 42,
                      "winner_name": "João Silva"
                    },
                    {
                      "product_id": 102,
                      "product_name": "PlayStation 5",
                      "product_image_url": "https://example.com/images/ps5.jpg",
                      "winning_number": 7,
                      "winner_name": "Maria Oliveira"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor."
          }
        }
      }
    }
  },
  "tags": []
}