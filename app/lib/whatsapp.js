// lib/whatsapp.js

// const SUPPORT_PHONE_NUMBER = "5511964081280";

/**
 * Gera uma URL "Click-to-Chat" do WhatsApp.
 * @param {string} phone - O n√∫mero de telefone do destinat√°rio no formato internacional (ex: 5511999999999).
 * @param {string} message - A mensagem a ser pr√©-preenchida.
 * @returns {string} A URL completa do WhatsApp.
 */
  
  /**
   * Gera a mensagem de notifica√ß√£o de pagamento aprovado.
   */
  export const createSuccessNotification = (userName, productName, orderId, purchasedNumbers, paymentLink) => {
    const message = `Ol√°, ${userName}! ‚úÖ\n\nO seu pagamento para o sorteio *${productName}* (Pedido #${orderId}) foi aprovado!\n\nOs seus n√∫meros da sorte s√£o: *${purchasedNumbers.join(', ')}*.\n\nBoa sorte! üçÄ`;
    return { message, link: paymentLink };
    // return { message, link: generateWhatsAppLink(SUPPORT_PHONE_NUMBER, `Gostaria de falar sobre o meu pedido #${orderId}.`) };
  };
  
  /**
   * Gera a mensagem de lembrete de pagamento pendente.
   */
  export const createReminderNotification = (userName, productName, orderId, reservedNumbers, paymentLink) => {
    const message = `Ol√°, ${userName}! ‚è≥\n\nEste √© um lembrete de que o seu pagamento para o sorteio *${productName}* (Pedido #${orderId}) est√° pendente.\n\nOs seus n√∫meros *${reservedNumbers.join(', ')}* est√£o reservados. Para n√£o os perder, finalize o pagamento aqui: ${paymentLink}`;
    return { message, link: paymentLink };
  };
  
  /**
   * Gera a mensagem de notifica√ß√£o para o ganhador.
   */
  export const createWinnerNotification = (userName, productName, orderId, winningNumber) => {
    const message = `üéâ PARAB√âNS, ${userName}! üéâ\n\nVoc√™ √© o grande ganhador(a) do sorteio *${productName}* (do seu Pedido #${orderId})!\n\nO seu n√∫mero da sorte foi o *${String(winningNumber).padStart(2, '0')}*.\n\nEm breve entraremos em contato para combinar a entrega do seu pr√™mio! ü•≥`;
    return { message };
    };
  
  /**
   * --- NOVA FUN√á√ÉO ---
   * Gera a mensagem de notifica√ß√£o de pagamento que falhou.
   */
  export const createFailureNotification = (userName, productName, orderId, paymentRetryLink) => {
      const message = `Ol√°, ${userName}. üòï\n\nO seu pagamento para o sorteio *${productName}* (Pedido #${orderId}) n√£o p√¥de ser processado.\n\nOs seus n√∫meros foram libertados. Se desejar, pode tentar novamente selecionando os n√∫meros e fazendo um novo pagamento.\n\nClique aqui para tentar novamente: ${paymentRetryLink}`;
      return { message, link: paymentRetryLink };
  };
  
/**
 * --- NOVA FUN√á√ÉO ---
 * Gera a mensagem de notifica√ß√£o de pedido cancelado por inatividade.
 * @param {string} userName - O nome do utilizador.
 * @param {string} productName - O nome do produto.
 * @param {number} orderId - O ID do pedido.
 */
export const createCancellationNotification = (userName, productName, orderId) => {
  const message = `Ol√°, ${userName}. ‚ÑπÔ∏è\n\nO seu pedido #${orderId} para o sorteio *${productName}* foi cancelado por falta de pagamento.\n\nOs n√∫meros que estavam reservados foram libertados e j√° est√£o dispon√≠veis para outros participantes.\n\nSe ainda tiver interesse, pode aceder √† p√°gina do sorteio e fazer uma nova sele√ß√£o.`;
  const buttons = [{ body: 'Ver Sorteio' }];
  return { message, buttons };
};

  // --- FUN√á√ÉO ATUALIZADA COM MELHOR LOG DE ERRO E URL CORRETA ---
  export const sendWhatsAppNotification = async (phone, message) => {
      try {
        const apiUrl = `${process.env.APP_URL_WHAT}/send-message`;
        const bodyData = new URLSearchParams();
        bodyData.append('number', phone);
        bodyData.append('message', message);
    
        console.log(`Tentando enviar notifica√ß√£o via WhatsApp para ${phone} via ${apiUrl}`);
    
        const response = await fetch(apiUrl, {
          method: "POST",
          headers: {
            "Content-Type": "application/x-www-form-urlencoded",
          },
          body: bodyData.toString(),
        });
    
        if (!response.ok) {
          const errorText = await response.text();
          console.error(`A API do WhatsApp respondeu com erro ${response.status}:`, errorText);
          throw new Error(`A API do WhatsApp respondeu com erro: ${response.statusText}`);
        }
    
        const result = await response.json();
        console.log("Resposta da API de WhatsApp:", result);
        return { success: true, message: "Notifica√ß√£o enviada com sucesso via API." };
    
      } catch (error) {
        console.error("Erro ao enviar notifica√ß√£o via API do WhatsApp:", error.message);
        if (error.cause) {
            console.error("Causa do erro (detalhes de rede):", error.cause);
        }
        
        return { success: false, message: "Falha ao enviar notifica√ß√£o via WhatsApp. Verifique a conectividade do servidor." };
      }
    };
    